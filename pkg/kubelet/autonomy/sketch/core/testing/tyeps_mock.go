// Automatically generated by MockGen. DO NOT EDIT!
// Source: $GOPATH/src/k8s.io/kubernetes/pkg/kubelet/autonomy/sketch/core/types.go

package testing

import (
	context "context"
	time "time"

	gomock "github.com/golang/mock/gomock"
	. "k8s.io/kubernetes/pkg/kubelet/autonomy/sketch/core"
)

// Mock of MetricsScraper interface
type MockMetricsScraper struct {
	ctrl     *gomock.Controller
	recorder *_MockMetricsScraperRecorder
}

// Recorder for MockMetricsScraper (not exported)
type _MockMetricsScraperRecorder struct {
	mock *MockMetricsScraper
}

func NewMockMetricsScraper(ctrl *gomock.Controller) *MockMetricsScraper {
	mock := &MockMetricsScraper{ctrl: ctrl}
	mock.recorder = &_MockMetricsScraperRecorder{mock}
	return mock
}

func (_m *MockMetricsScraper) EXPECT() *_MockMetricsScraperRecorder {
	return _m.recorder
}

func (_m *MockMetricsScraper) Name() string {
	ret := _m.ctrl.Call(_m, "Name")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockMetricsScraperRecorder) Name() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Name")
}

func (_m *MockMetricsScraper) Scrape(ctx context.Context, timestamp time.Time) *DataBatch {
	ret := _m.ctrl.Call(_m, "Scrape", ctx, timestamp)
	ret0, _ := ret[0].(*DataBatch)
	return ret0
}

func (_mr *_MockMetricsScraperRecorder) Scrape(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Scrape", arg0, arg1)
}

// Mock of MetricsScraperProvider interface
type MockMetricsScraperProvider struct {
	ctrl     *gomock.Controller
	recorder *_MockMetricsScraperProviderRecorder
}

// Recorder for MockMetricsScraperProvider (not exported)
type _MockMetricsScraperProviderRecorder struct {
	mock *MockMetricsScraperProvider
}

func NewMockMetricsScraperProvider(ctrl *gomock.Controller) *MockMetricsScraperProvider {
	mock := &MockMetricsScraperProvider{ctrl: ctrl}
	mock.recorder = &_MockMetricsScraperProviderRecorder{mock}
	return mock
}

func (_m *MockMetricsScraperProvider) EXPECT() *_MockMetricsScraperProviderRecorder {
	return _m.recorder
}

func (_m *MockMetricsScraperProvider) GetMetricsScrapers() []MetricsScraper {
	ret := _m.ctrl.Call(_m, "GetMetricsScrapers")
	ret0, _ := ret[0].([]MetricsScraper)
	return ret0
}

func (_mr *_MockMetricsScraperProviderRecorder) GetMetricsScrapers() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetMetricsScrapers")
}

// Mock of DataProcessor interface
type MockDataProcessor struct {
	ctrl     *gomock.Controller
	recorder *_MockDataProcessorRecorder
}

// Recorder for MockDataProcessor (not exported)
type _MockDataProcessorRecorder struct {
	mock *MockDataProcessor
}

func NewMockDataProcessor(ctrl *gomock.Controller) *MockDataProcessor {
	mock := &MockDataProcessor{ctrl: ctrl}
	mock.recorder = &_MockDataProcessorRecorder{mock}
	return mock
}

func (_m *MockDataProcessor) EXPECT() *_MockDataProcessorRecorder {
	return _m.recorder
}

func (_m *MockDataProcessor) Name() string {
	ret := _m.ctrl.Call(_m, "Name")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockDataProcessorRecorder) Name() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Name")
}

func (_m *MockDataProcessor) Process(_param0 *DataBatch) (*DataBatch, error) {
	ret := _m.ctrl.Call(_m, "Process", _param0)
	ret0, _ := ret[0].(*DataBatch)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockDataProcessorRecorder) Process(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Process", arg0)
}
