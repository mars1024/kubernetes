// +build !multitenancy

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "gitlab.alipay-inc.com/antcloud-aks/cafe-kubernetes-extension/pkg/apis/apps/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CafeDeploymentLister helps list CafeDeployments.
type CafeDeploymentLister interface {
	// List lists all CafeDeployments in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.CafeDeployment, err error)
	// CafeDeployments returns an object that can list and get CafeDeployments.
	CafeDeployments(namespace string) CafeDeploymentNamespaceLister
	CafeDeploymentListerExpansion
}

// cafeDeploymentLister implements the CafeDeploymentLister interface.
type cafeDeploymentLister struct {
	indexer cache.Indexer
}

// NewCafeDeploymentLister returns a new CafeDeploymentLister.
func NewCafeDeploymentLister(indexer cache.Indexer) CafeDeploymentLister {
	return &cafeDeploymentLister{indexer: indexer}
}

// List lists all CafeDeployments in the indexer.
func (s *cafeDeploymentLister) List(selector labels.Selector) (ret []*v1alpha1.CafeDeployment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CafeDeployment))
	})
	return ret, err
}

// CafeDeployments returns an object that can list and get CafeDeployments.
func (s *cafeDeploymentLister) CafeDeployments(namespace string) CafeDeploymentNamespaceLister {
	return cafeDeploymentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CafeDeploymentNamespaceLister helps list and get CafeDeployments.
type CafeDeploymentNamespaceLister interface {
	// List lists all CafeDeployments in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.CafeDeployment, err error)
	// Get retrieves the CafeDeployment from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.CafeDeployment, error)
	CafeDeploymentNamespaceListerExpansion
}

// cafeDeploymentNamespaceLister implements the CafeDeploymentNamespaceLister
// interface.
type cafeDeploymentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CafeDeployments in the indexer for a given namespace.
func (s cafeDeploymentNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CafeDeployment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CafeDeployment))
	})
	return ret, err
}

// Get retrieves the CafeDeployment from the indexer for a given namespace and name.
func (s cafeDeploymentNamespaceLister) Get(name string) (*v1alpha1.CafeDeployment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("cafedeployment"), name)
	}
	return obj.(*v1alpha1.CafeDeployment), nil
}
