// +build !multitenancy

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "gitlab.alipay-inc.com/antcloud-aks/cafe-kubernetes-extension/pkg/apis/apps/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// InPlaceSetLister helps list InPlaceSets.
type InPlaceSetLister interface {
	// List lists all InPlaceSets in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.InPlaceSet, err error)
	// InPlaceSets returns an object that can list and get InPlaceSets.
	InPlaceSets(namespace string) InPlaceSetNamespaceLister
	InPlaceSetListerExpansion
}

// inPlaceSetLister implements the InPlaceSetLister interface.
type inPlaceSetLister struct {
	indexer cache.Indexer
}

// NewInPlaceSetLister returns a new InPlaceSetLister.
func NewInPlaceSetLister(indexer cache.Indexer) InPlaceSetLister {
	return &inPlaceSetLister{indexer: indexer}
}

// List lists all InPlaceSets in the indexer.
func (s *inPlaceSetLister) List(selector labels.Selector) (ret []*v1alpha1.InPlaceSet, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.InPlaceSet))
	})
	return ret, err
}

// InPlaceSets returns an object that can list and get InPlaceSets.
func (s *inPlaceSetLister) InPlaceSets(namespace string) InPlaceSetNamespaceLister {
	return inPlaceSetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// InPlaceSetNamespaceLister helps list and get InPlaceSets.
type InPlaceSetNamespaceLister interface {
	// List lists all InPlaceSets in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.InPlaceSet, err error)
	// Get retrieves the InPlaceSet from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.InPlaceSet, error)
	InPlaceSetNamespaceListerExpansion
}

// inPlaceSetNamespaceLister implements the InPlaceSetNamespaceLister
// interface.
type inPlaceSetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all InPlaceSets in the indexer for a given namespace.
func (s inPlaceSetNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.InPlaceSet, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.InPlaceSet))
	})
	return ret, err
}

// Get retrieves the InPlaceSet from the indexer for a given namespace and name.
func (s inPlaceSetNamespaceLister) Get(name string) (*v1alpha1.InPlaceSet, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("inplaceset"), name)
	}
	return obj.(*v1alpha1.InPlaceSet), nil
}
