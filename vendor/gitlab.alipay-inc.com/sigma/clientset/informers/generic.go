/*
Copyright 2019 The Alipay Authors.
*/

// Code generated by informer-gen. DO NOT EDIT.

package informers

import (
	v1beta1 "gitlab.alipay-inc.com/sigma/clientset/pkg/apis/apiextensions/v1beta1"
	v1 "gitlab.alipay-inc.com/sigma/clientset/pkg/apis/apiregistration/v1"
	clusterv1 "gitlab.alipay-inc.com/sigma/clientset/pkg/apis/cluster/v1"
	v1alpha1 "gitlab.alipay-inc.com/sigma/clientset/pkg/apis/kok/v1alpha1"
	machinev1 "gitlab.alipay-inc.com/sigma/clientset/pkg/apis/machine/v1"
	monitoringv1 "gitlab.alipay-inc.com/sigma/clientset/pkg/apis/monitoring/v1"
	networkv1 "gitlab.alipay-inc.com/sigma/clientset/pkg/apis/network/v1"
	opsv1alpha1 "gitlab.alipay-inc.com/sigma/clientset/pkg/apis/ops/v1alpha1"
	profilev1alpha1 "gitlab.alipay-inc.com/sigma/clientset/pkg/apis/profile/v1alpha1"
	promotionv1beta1 "gitlab.alipay-inc.com/sigma/clientset/pkg/apis/promotion/v1beta1"
	quotav1 "gitlab.alipay-inc.com/sigma/clientset/pkg/apis/quota/v1"
	schedulingextensionsv1 "gitlab.alipay-inc.com/sigma/clientset/pkg/apis/schedulingextensions/v1"
	storageextensionsv1 "gitlab.alipay-inc.com/sigma/clientset/pkg/apis/storageextensions/v1"
	schema "k8s.io/apimachinery/pkg/runtime/schema"
	informers "k8s.io/client-go/informers"
	cache "k8s.io/client-go/tools/cache"
)

type genericInformer struct {
	informer cache.SharedIndexInformer
	resource schema.GroupResource
}

// Informer returns the SharedIndexInformer.
func (f *genericInformer) Informer() cache.SharedIndexInformer {
	return f.informer
}

// Lister returns the GenericLister.
func (f *genericInformer) Lister() cache.GenericLister {
	return cache.NewGenericLister(f.Informer().GetIndexer(), f.resource)
}

// ForResource gives generic access to a shared informer of the matching type
// TODO extend this to unknown resources with a client pool
func (f *sharedInformerFactory) ForResource(resource schema.GroupVersionResource) (informers.GenericInformer, error) {
	switch resource {
	// Group=apiextensions.k8s.io, Version=v1beta1
	case v1beta1.SchemeGroupVersion.WithResource("customresourcedefinitions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apiextensions().V1beta1().CustomResourceDefinitions().Informer()}, nil

		// Group=apiregistration.k8s.io, Version=v1
	case v1.SchemeGroupVersion.WithResource("apiservices"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apiregistration().V1().APIServices().Informer()}, nil

		// Group=cluster.sigma.alipay.com, Version=v1
	case clusterv1.SchemeGroupVersion.WithResource("clusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cluster().V1().Clusters().Informer()}, nil
	case clusterv1.SchemeGroupVersion.WithResource("clusterversions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cluster().V1().ClusterVersions().Informer()}, nil

		// Group=kok.sigma.alipay.com, Version=v1alpha1
	case v1alpha1.SchemeGroupVersion.WithResource("clusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kok().V1alpha1().Clusters().Informer()}, nil
	case v1alpha1.SchemeGroupVersion.WithResource("clusterversions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kok().V1alpha1().ClusterVersions().Informer()}, nil

		// Group=machine.sigma.alipay.com, Version=v1
	case machinev1.SchemeGroupVersion.WithResource("machines"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Machine().V1().Machines().Informer()}, nil
	case machinev1.SchemeGroupVersion.WithResource("machineopses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Machine().V1().MachineOpses().Informer()}, nil
	case machinev1.SchemeGroupVersion.WithResource("machinepackages"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Machine().V1().MachinePackages().Informer()}, nil
	case machinev1.SchemeGroupVersion.WithResource("machinepackageversions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Machine().V1().MachinePackageVersions().Informer()}, nil
	case machinev1.SchemeGroupVersion.WithResource("opstypes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Machine().V1().OpsTypes().Informer()}, nil

		// Group=monitoring.sigma.alipay.com, Version=v1
	case monitoringv1.SchemeGroupVersion.WithResource("clusterscrapeconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitoring().V1().ClusterScrapeConfigs().Informer()}, nil
	case monitoringv1.SchemeGroupVersion.WithResource("monitoringrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitoring().V1().MonitoringRules().Informer()}, nil
	case monitoringv1.SchemeGroupVersion.WithResource("notificationchannels"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitoring().V1().NotificationChannels().Informer()}, nil
	case monitoringv1.SchemeGroupVersion.WithResource("notificationgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitoring().V1().NotificationGroups().Informer()}, nil
	case monitoringv1.SchemeGroupVersion.WithResource("notificationreceivers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitoring().V1().NotificationReceivers().Informer()}, nil
	case monitoringv1.SchemeGroupVersion.WithResource("notificationtemplates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitoring().V1().NotificationTemplates().Informer()}, nil
	case monitoringv1.SchemeGroupVersion.WithResource("scrapeconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitoring().V1().ScrapeConfigs().Informer()}, nil

		// Group=network.k8s.alipay.com, Version=v1
	case networkv1.SchemeGroupVersion.WithResource("interfaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1().Interfaces().Informer()}, nil
	case networkv1.SchemeGroupVersion.WithResource("predictedinterfaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1().PredictedInterfaces().Informer()}, nil
	case networkv1.SchemeGroupVersion.WithResource("securitygroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1().SecurityGroups().Informer()}, nil
	case networkv1.SchemeGroupVersion.WithResource("vswitches"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1().VSwitches().Informer()}, nil

		// Group=ops.sigma.alipay.com, Version=v1alpha1
	case opsv1alpha1.SchemeGroupVersion.WithResource("clustermachinepackageversions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ops().V1alpha1().ClusterMachinePackageVersions().Informer()}, nil
	case opsv1alpha1.SchemeGroupVersion.WithResource("machines"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ops().V1alpha1().Machines().Informer()}, nil
	case opsv1alpha1.SchemeGroupVersion.WithResource("machinepackagebetapublishes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ops().V1alpha1().MachinePackageBetaPublishes().Informer()}, nil
	case opsv1alpha1.SchemeGroupVersion.WithResource("machinepackageversions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ops().V1alpha1().MachinePackageVersions().Informer()}, nil

		// Group=profile.sigma.alipay.com, Version=v1alpha1
	case profilev1alpha1.SchemeGroupVersion.WithResource("resourceprofiles"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Profile().V1alpha1().ResourceProfiles().Informer()}, nil

		// Group=promotion.sigma.alipay.com, Version=v1beta1
	case promotionv1beta1.SchemeGroupVersion.WithResource("nodeswapclaims"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Promotion().V1beta1().NodeSwapClaims().Informer()}, nil
	case promotionv1beta1.SchemeGroupVersion.WithResource("promotionclaims"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Promotion().V1beta1().PromotionClaims().Informer()}, nil

		// Group=quota.sigma.alipay.com, Version=v1
	case quotav1.SchemeGroupVersion.WithResource("clusterresourcequotas"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Quota().V1().ClusterResourceQuotas().Informer()}, nil

		// Group=schedulingextensions.sigma.alipay.com, Version=v1
	case schedulingextensionsv1.SchemeGroupVersion.WithResource("podgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Schedulingextensions().V1().PodGroups().Informer()}, nil

		// Group=storageextensions.sigma.alipay.com, Version=v1
	case storageextensionsv1.SchemeGroupVersion.WithResource("nodediskstorageclasses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storageextensions().V1().NodeDiskStorageClasses().Informer()}, nil

	}

	return f.SharedInformerFactory.ForResource(resource)
}
