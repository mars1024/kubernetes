/*
Copyright 2019 The Alipay Authors.
*/

// Code generated by informer-gen. DO NOT EDIT.

package v1

import (
	internalinterfaces "k8s.io/client-go/informers/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// ClusterScrapeConfigs returns a ClusterScrapeConfigInformer.
	ClusterScrapeConfigs() ClusterScrapeConfigInformer
	// MonitoringRules returns a MonitoringRuleInformer.
	MonitoringRules() MonitoringRuleInformer
	// NotificationChannels returns a NotificationChannelInformer.
	NotificationChannels() NotificationChannelInformer
	// NotificationGroups returns a NotificationGroupInformer.
	NotificationGroups() NotificationGroupInformer
	// NotificationReceivers returns a NotificationReceiverInformer.
	NotificationReceivers() NotificationReceiverInformer
	// NotificationTemplates returns a NotificationTemplateInformer.
	NotificationTemplates() NotificationTemplateInformer
	// ScrapeConfigs returns a ScrapeConfigInformer.
	ScrapeConfigs() ScrapeConfigInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// ClusterScrapeConfigs returns a ClusterScrapeConfigInformer.
func (v *version) ClusterScrapeConfigs() ClusterScrapeConfigInformer {
	return &clusterScrapeConfigInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// MonitoringRules returns a MonitoringRuleInformer.
func (v *version) MonitoringRules() MonitoringRuleInformer {
	return &monitoringRuleInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// NotificationChannels returns a NotificationChannelInformer.
func (v *version) NotificationChannels() NotificationChannelInformer {
	return &notificationChannelInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// NotificationGroups returns a NotificationGroupInformer.
func (v *version) NotificationGroups() NotificationGroupInformer {
	return &notificationGroupInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// NotificationReceivers returns a NotificationReceiverInformer.
func (v *version) NotificationReceivers() NotificationReceiverInformer {
	return &notificationReceiverInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// NotificationTemplates returns a NotificationTemplateInformer.
func (v *version) NotificationTemplates() NotificationTemplateInformer {
	return &notificationTemplateInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// ScrapeConfigs returns a ScrapeConfigInformer.
func (v *version) ScrapeConfigs() ScrapeConfigInformer {
	return &scrapeConfigInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
