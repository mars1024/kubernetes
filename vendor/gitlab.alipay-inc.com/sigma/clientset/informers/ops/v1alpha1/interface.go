/*
Copyright 2019 The Alipay Authors.
*/

// Code generated by informer-gen. DO NOT EDIT.

package v1alpha1

import (
	internalinterfaces "k8s.io/client-go/informers/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// ClusterMachinePackageVersions returns a ClusterMachinePackageVersionInformer.
	ClusterMachinePackageVersions() ClusterMachinePackageVersionInformer
	// Machines returns a MachineInformer.
	Machines() MachineInformer
	// MachinePackageBetaPublishes returns a MachinePackageBetaPublishInformer.
	MachinePackageBetaPublishes() MachinePackageBetaPublishInformer
	// MachinePackageVersions returns a MachinePackageVersionInformer.
	MachinePackageVersions() MachinePackageVersionInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// ClusterMachinePackageVersions returns a ClusterMachinePackageVersionInformer.
func (v *version) ClusterMachinePackageVersions() ClusterMachinePackageVersionInformer {
	return &clusterMachinePackageVersionInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// Machines returns a MachineInformer.
func (v *version) Machines() MachineInformer {
	return &machineInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// MachinePackageBetaPublishes returns a MachinePackageBetaPublishInformer.
func (v *version) MachinePackageBetaPublishes() MachinePackageBetaPublishInformer {
	return &machinePackageBetaPublishInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// MachinePackageVersions returns a MachinePackageVersionInformer.
func (v *version) MachinePackageVersions() MachinePackageVersionInformer {
	return &machinePackageVersionInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}
