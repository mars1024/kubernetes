/*
Copyright 2019 The Alipay Authors.
*/

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	clientset "gitlab.alipay-inc.com/sigma/clientset/kubernetes"
	apiextensionsv1beta1 "gitlab.alipay-inc.com/sigma/clientset/kubernetes/typed/apiextensions/v1beta1"
	fakeapiextensionsv1beta1 "gitlab.alipay-inc.com/sigma/clientset/kubernetes/typed/apiextensions/v1beta1/fake"
	apiregistrationv1 "gitlab.alipay-inc.com/sigma/clientset/kubernetes/typed/apiregistration/v1"
	fakeapiregistrationv1 "gitlab.alipay-inc.com/sigma/clientset/kubernetes/typed/apiregistration/v1/fake"
	clusterv1 "gitlab.alipay-inc.com/sigma/clientset/kubernetes/typed/cluster/v1"
	fakeclusterv1 "gitlab.alipay-inc.com/sigma/clientset/kubernetes/typed/cluster/v1/fake"
	kokv1alpha1 "gitlab.alipay-inc.com/sigma/clientset/kubernetes/typed/kok/v1alpha1"
	fakekokv1alpha1 "gitlab.alipay-inc.com/sigma/clientset/kubernetes/typed/kok/v1alpha1/fake"
	machinev1 "gitlab.alipay-inc.com/sigma/clientset/kubernetes/typed/machine/v1"
	fakemachinev1 "gitlab.alipay-inc.com/sigma/clientset/kubernetes/typed/machine/v1/fake"
	monitoringv1 "gitlab.alipay-inc.com/sigma/clientset/kubernetes/typed/monitoring/v1"
	fakemonitoringv1 "gitlab.alipay-inc.com/sigma/clientset/kubernetes/typed/monitoring/v1/fake"
	networkv1 "gitlab.alipay-inc.com/sigma/clientset/kubernetes/typed/network/v1"
	fakenetworkv1 "gitlab.alipay-inc.com/sigma/clientset/kubernetes/typed/network/v1/fake"
	opsv1alpha1 "gitlab.alipay-inc.com/sigma/clientset/kubernetes/typed/ops/v1alpha1"
	fakeopsv1alpha1 "gitlab.alipay-inc.com/sigma/clientset/kubernetes/typed/ops/v1alpha1/fake"
	profilev1alpha1 "gitlab.alipay-inc.com/sigma/clientset/kubernetes/typed/profile/v1alpha1"
	fakeprofilev1alpha1 "gitlab.alipay-inc.com/sigma/clientset/kubernetes/typed/profile/v1alpha1/fake"
	promotionv1beta1 "gitlab.alipay-inc.com/sigma/clientset/kubernetes/typed/promotion/v1beta1"
	fakepromotionv1beta1 "gitlab.alipay-inc.com/sigma/clientset/kubernetes/typed/promotion/v1beta1/fake"
	quotav1 "gitlab.alipay-inc.com/sigma/clientset/kubernetes/typed/quota/v1"
	fakequotav1 "gitlab.alipay-inc.com/sigma/clientset/kubernetes/typed/quota/v1/fake"
	schedulingextensionsv1 "gitlab.alipay-inc.com/sigma/clientset/kubernetes/typed/schedulingextensions/v1"
	fakeschedulingextensionsv1 "gitlab.alipay-inc.com/sigma/clientset/kubernetes/typed/schedulingextensions/v1/fake"
	storageextensionsv1 "gitlab.alipay-inc.com/sigma/clientset/kubernetes/typed/storageextensions/v1"
	fakestorageextensionsv1 "gitlab.alipay-inc.com/sigma/clientset/kubernetes/typed/storageextensions/v1/fake"
	"k8s.io/apimachinery/pkg/runtime"
	fake "k8s.io/client-go/kubernetes/fake"
)

// NewSimpleClientset returns a clientset that will respond with the provided objects.
// It's backed by a very simple object tracker that processes creates, updates and deletions as-is,
// without applying any validations and/or defaults. It shouldn't be considered a replacement
// for a real clientset and is mostly useful in simple unit tests.
func NewSimpleClientset(objects ...runtime.Object) *Clientset {
	if objects == nil {
		objects = []runtime.Object{}
	}
	cs := &Clientset{
		Clientset: fake.NewSimpleClientset(objects...),
	}
	return cs
}

// Clientset implements clientset.Interface. Meant to be embedded into a
// struct to get a default implementation. This makes faking out just the method
// you want to test easier.
type Clientset struct {
	*fake.Clientset
}

var _ clientset.Interface = &Clientset{}

// ApiextensionsV1beta1 retrieves the ApiextensionsV1beta1Client
func (c *Clientset) ApiextensionsV1beta1() apiextensionsv1beta1.ApiextensionsV1beta1Interface {
	return &fakeapiextensionsv1beta1.FakeApiextensionsV1beta1{Fake: &c.Fake}
}

// Apiextensions retrieves the ApiextensionsV1beta1Client
func (c *Clientset) Apiextensions() apiextensionsv1beta1.ApiextensionsV1beta1Interface {
	return &fakeapiextensionsv1beta1.FakeApiextensionsV1beta1{Fake: &c.Fake}
}

// ApiregistrationV1 retrieves the ApiregistrationV1Client
func (c *Clientset) ApiregistrationV1() apiregistrationv1.ApiregistrationV1Interface {
	return &fakeapiregistrationv1.FakeApiregistrationV1{Fake: &c.Fake}
}

// Apiregistration retrieves the ApiregistrationV1Client
func (c *Clientset) Apiregistration() apiregistrationv1.ApiregistrationV1Interface {
	return &fakeapiregistrationv1.FakeApiregistrationV1{Fake: &c.Fake}
}

// ClusterV1 retrieves the ClusterV1Client
func (c *Clientset) ClusterV1() clusterv1.ClusterV1Interface {
	return &fakeclusterv1.FakeClusterV1{Fake: &c.Fake}
}

// Cluster retrieves the ClusterV1Client
func (c *Clientset) Cluster() clusterv1.ClusterV1Interface {
	return &fakeclusterv1.FakeClusterV1{Fake: &c.Fake}
}

// KokV1alpha1 retrieves the KokV1alpha1Client
func (c *Clientset) KokV1alpha1() kokv1alpha1.KokV1alpha1Interface {
	return &fakekokv1alpha1.FakeKokV1alpha1{Fake: &c.Fake}
}

// Kok retrieves the KokV1alpha1Client
func (c *Clientset) Kok() kokv1alpha1.KokV1alpha1Interface {
	return &fakekokv1alpha1.FakeKokV1alpha1{Fake: &c.Fake}
}

// MachineV1 retrieves the MachineV1Client
func (c *Clientset) MachineV1() machinev1.MachineV1Interface {
	return &fakemachinev1.FakeMachineV1{Fake: &c.Fake}
}

// Machine retrieves the MachineV1Client
func (c *Clientset) Machine() machinev1.MachineV1Interface {
	return &fakemachinev1.FakeMachineV1{Fake: &c.Fake}
}

// MonitoringV1 retrieves the MonitoringV1Client
func (c *Clientset) MonitoringV1() monitoringv1.MonitoringV1Interface {
	return &fakemonitoringv1.FakeMonitoringV1{Fake: &c.Fake}
}

// Monitoring retrieves the MonitoringV1Client
func (c *Clientset) Monitoring() monitoringv1.MonitoringV1Interface {
	return &fakemonitoringv1.FakeMonitoringV1{Fake: &c.Fake}
}

// NetworkV1 retrieves the NetworkV1Client
func (c *Clientset) NetworkV1() networkv1.NetworkV1Interface {
	return &fakenetworkv1.FakeNetworkV1{Fake: &c.Fake}
}

// Network retrieves the NetworkV1Client
func (c *Clientset) Network() networkv1.NetworkV1Interface {
	return &fakenetworkv1.FakeNetworkV1{Fake: &c.Fake}
}

// OpsV1alpha1 retrieves the OpsV1alpha1Client
func (c *Clientset) OpsV1alpha1() opsv1alpha1.OpsV1alpha1Interface {
	return &fakeopsv1alpha1.FakeOpsV1alpha1{Fake: &c.Fake}
}

// Ops retrieves the OpsV1alpha1Client
func (c *Clientset) Ops() opsv1alpha1.OpsV1alpha1Interface {
	return &fakeopsv1alpha1.FakeOpsV1alpha1{Fake: &c.Fake}
}

// ProfileV1alpha1 retrieves the ProfileV1alpha1Client
func (c *Clientset) ProfileV1alpha1() profilev1alpha1.ProfileV1alpha1Interface {
	return &fakeprofilev1alpha1.FakeProfileV1alpha1{Fake: &c.Fake}
}

// Profile retrieves the ProfileV1alpha1Client
func (c *Clientset) Profile() profilev1alpha1.ProfileV1alpha1Interface {
	return &fakeprofilev1alpha1.FakeProfileV1alpha1{Fake: &c.Fake}
}

// PromotionV1beta1 retrieves the PromotionV1beta1Client
func (c *Clientset) PromotionV1beta1() promotionv1beta1.PromotionV1beta1Interface {
	return &fakepromotionv1beta1.FakePromotionV1beta1{Fake: &c.Fake}
}

// Promotion retrieves the PromotionV1beta1Client
func (c *Clientset) Promotion() promotionv1beta1.PromotionV1beta1Interface {
	return &fakepromotionv1beta1.FakePromotionV1beta1{Fake: &c.Fake}
}

// QuotaV1 retrieves the QuotaV1Client
func (c *Clientset) QuotaV1() quotav1.QuotaV1Interface {
	return &fakequotav1.FakeQuotaV1{Fake: &c.Fake}
}

// Quota retrieves the QuotaV1Client
func (c *Clientset) Quota() quotav1.QuotaV1Interface {
	return &fakequotav1.FakeQuotaV1{Fake: &c.Fake}
}

// SchedulingextensionsV1 retrieves the SchedulingextensionsV1Client
func (c *Clientset) SchedulingextensionsV1() schedulingextensionsv1.SchedulingextensionsV1Interface {
	return &fakeschedulingextensionsv1.FakeSchedulingextensionsV1{Fake: &c.Fake}
}

// Schedulingextensions retrieves the SchedulingextensionsV1Client
func (c *Clientset) Schedulingextensions() schedulingextensionsv1.SchedulingextensionsV1Interface {
	return &fakeschedulingextensionsv1.FakeSchedulingextensionsV1{Fake: &c.Fake}
}

// StorageextensionsV1 retrieves the StorageextensionsV1Client
func (c *Clientset) StorageextensionsV1() storageextensionsv1.StorageextensionsV1Interface {
	return &fakestorageextensionsv1.FakeStorageextensionsV1{Fake: &c.Fake}
}

// Storageextensions retrieves the StorageextensionsV1Client
func (c *Clientset) Storageextensions() storageextensionsv1.StorageextensionsV1Interface {
	return &fakestorageextensionsv1.FakeStorageextensionsV1{Fake: &c.Fake}
}
