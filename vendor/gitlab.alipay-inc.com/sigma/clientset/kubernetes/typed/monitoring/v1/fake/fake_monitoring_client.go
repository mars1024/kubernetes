/*
Copyright 2019 The Alipay Authors.
*/

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "gitlab.alipay-inc.com/sigma/clientset/kubernetes/typed/monitoring/v1"
	rest "k8s.io/client-go/rest"
	testing "k8s.io/client-go/testing"
)

type FakeMonitoringV1 struct {
	*testing.Fake
}

func (c *FakeMonitoringV1) ClusterScrapeConfigs() v1.ClusterScrapeConfigInterface {
	return &FakeClusterScrapeConfigs{c}
}

func (c *FakeMonitoringV1) MonitoringRules() v1.MonitoringRuleInterface {
	return &FakeMonitoringRules{c}
}

func (c *FakeMonitoringV1) NotificationChannels() v1.NotificationChannelInterface {
	return &FakeNotificationChannels{c}
}

func (c *FakeMonitoringV1) NotificationGroups() v1.NotificationGroupInterface {
	return &FakeNotificationGroups{c}
}

func (c *FakeMonitoringV1) NotificationReceivers() v1.NotificationReceiverInterface {
	return &FakeNotificationReceivers{c}
}

func (c *FakeMonitoringV1) NotificationTemplates() v1.NotificationTemplateInterface {
	return &FakeNotificationTemplates{c}
}

func (c *FakeMonitoringV1) ScrapeConfigs(namespace string) v1.ScrapeConfigInterface {
	return &FakeScrapeConfigs{c, namespace}
}

// RESTClient returns a RESTClient that is used to communicate
// with API server by this client implementation.
func (c *FakeMonitoringV1) RESTClient() rest.Interface {
	var ret *rest.RESTClient
	return ret
}
