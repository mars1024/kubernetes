/*
Copyright 2019 The Alipay Authors.
*/

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	networkv1 "gitlab.alipay-inc.com/sigma/clientset/pkg/apis/network/v1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	labels "k8s.io/apimachinery/pkg/labels"
	schema "k8s.io/apimachinery/pkg/runtime/schema"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	testing "k8s.io/client-go/testing"
)

// FakePredictedInterfaces implements PredictedInterfaceInterface
type FakePredictedInterfaces struct {
	Fake *FakeNetworkV1
}

var predictedinterfacesResource = schema.GroupVersionResource{Group: "network.k8s.alipay.com", Version: "v1", Resource: "predictedinterfaces"}

var predictedinterfacesKind = schema.GroupVersionKind{Group: "network.k8s.alipay.com", Version: "v1", Kind: "PredictedInterface"}

// Get takes name of the predictedInterface, and returns the corresponding predictedInterface object, and an error if there is any.
func (c *FakePredictedInterfaces) Get(name string, options v1.GetOptions) (result *networkv1.PredictedInterface, err error) {
	obj, err := c.Fake.
		Invokes(testing.NewRootGetAction(predictedinterfacesResource, name), &networkv1.PredictedInterface{})
	if obj == nil {
		return nil, err
	}
	return obj.(*networkv1.PredictedInterface), err
}

// List takes label and field selectors, and returns the list of PredictedInterfaces that match those selectors.
func (c *FakePredictedInterfaces) List(opts v1.ListOptions) (result *networkv1.PredictedInterfaceList, err error) {
	obj, err := c.Fake.
		Invokes(testing.NewRootListAction(predictedinterfacesResource, predictedinterfacesKind, opts), &networkv1.PredictedInterfaceList{})
	if obj == nil {
		return nil, err
	}

	label, _, _ := testing.ExtractFromListOptions(opts)
	if label == nil {
		label = labels.Everything()
	}
	list := &networkv1.PredictedInterfaceList{ListMeta: obj.(*networkv1.PredictedInterfaceList).ListMeta}
	for _, item := range obj.(*networkv1.PredictedInterfaceList).Items {
		if label.Matches(labels.Set(item.Labels)) {
			list.Items = append(list.Items, item)
		}
	}
	return list, err
}

// Watch returns a watch.Interface that watches the requested predictedInterfaces.
func (c *FakePredictedInterfaces) Watch(opts v1.ListOptions) (watch.Interface, error) {
	return c.Fake.
		InvokesWatch(testing.NewRootWatchAction(predictedinterfacesResource, opts))
}

// Create takes the representation of a predictedInterface and creates it.  Returns the server's representation of the predictedInterface, and an error, if there is any.
func (c *FakePredictedInterfaces) Create(predictedInterface *networkv1.PredictedInterface) (result *networkv1.PredictedInterface, err error) {
	obj, err := c.Fake.
		Invokes(testing.NewRootCreateAction(predictedinterfacesResource, predictedInterface), &networkv1.PredictedInterface{})
	if obj == nil {
		return nil, err
	}
	return obj.(*networkv1.PredictedInterface), err
}

// Update takes the representation of a predictedInterface and updates it. Returns the server's representation of the predictedInterface, and an error, if there is any.
func (c *FakePredictedInterfaces) Update(predictedInterface *networkv1.PredictedInterface) (result *networkv1.PredictedInterface, err error) {
	obj, err := c.Fake.
		Invokes(testing.NewRootUpdateAction(predictedinterfacesResource, predictedInterface), &networkv1.PredictedInterface{})
	if obj == nil {
		return nil, err
	}
	return obj.(*networkv1.PredictedInterface), err
}

// UpdateStatus was generated because the type contains a Status member.
// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
func (c *FakePredictedInterfaces) UpdateStatus(predictedInterface *networkv1.PredictedInterface) (*networkv1.PredictedInterface, error) {
	obj, err := c.Fake.
		Invokes(testing.NewRootUpdateSubresourceAction(predictedinterfacesResource, "status", predictedInterface), &networkv1.PredictedInterface{})
	if obj == nil {
		return nil, err
	}
	return obj.(*networkv1.PredictedInterface), err
}

// Delete takes name of the predictedInterface and deletes it. Returns an error if one occurs.
func (c *FakePredictedInterfaces) Delete(name string, options *v1.DeleteOptions) error {
	_, err := c.Fake.
		Invokes(testing.NewRootDeleteAction(predictedinterfacesResource, name), &networkv1.PredictedInterface{})
	return err
}

// DeleteCollection deletes a collection of objects.
func (c *FakePredictedInterfaces) DeleteCollection(options *v1.DeleteOptions, listOptions v1.ListOptions) error {
	action := testing.NewRootDeleteCollectionAction(predictedinterfacesResource, listOptions)

	_, err := c.Fake.Invokes(action, &networkv1.PredictedInterfaceList{})
	return err
}

// Patch applies the patch and returns the patched predictedInterface.
func (c *FakePredictedInterfaces) Patch(name string, pt types.PatchType, data []byte, subresources ...string) (result *networkv1.PredictedInterface, err error) {
	obj, err := c.Fake.
		Invokes(testing.NewRootPatchSubresourceAction(predictedinterfacesResource, name, data, subresources...), &networkv1.PredictedInterface{})
	if obj == nil {
		return nil, err
	}
	return obj.(*networkv1.PredictedInterface), err
}
