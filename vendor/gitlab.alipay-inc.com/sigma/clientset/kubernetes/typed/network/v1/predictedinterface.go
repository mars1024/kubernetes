/*
Copyright 2019 The Alipay Authors.
*/

// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	scheme "gitlab.alipay-inc.com/sigma/clientset/kubernetes/scheme"
	v1 "gitlab.alipay-inc.com/sigma/clientset/pkg/apis/network/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	rest "k8s.io/client-go/rest"
)

// PredictedInterfacesGetter has a method to return a PredictedInterfaceInterface.
// A group's client should implement this interface.
type PredictedInterfacesGetter interface {
	PredictedInterfaces() PredictedInterfaceInterface
}

// PredictedInterfaceInterface has methods to work with PredictedInterface resources.
type PredictedInterfaceInterface interface {
	Create(*v1.PredictedInterface) (*v1.PredictedInterface, error)
	Update(*v1.PredictedInterface) (*v1.PredictedInterface, error)
	UpdateStatus(*v1.PredictedInterface) (*v1.PredictedInterface, error)
	Delete(name string, options *metav1.DeleteOptions) error
	DeleteCollection(options *metav1.DeleteOptions, listOptions metav1.ListOptions) error
	Get(name string, options metav1.GetOptions) (*v1.PredictedInterface, error)
	List(opts metav1.ListOptions) (*v1.PredictedInterfaceList, error)
	Watch(opts metav1.ListOptions) (watch.Interface, error)
	Patch(name string, pt types.PatchType, data []byte, subresources ...string) (result *v1.PredictedInterface, err error)
	PredictedInterfaceExpansion
}

// predictedInterfaces implements PredictedInterfaceInterface
type predictedInterfaces struct {
	client rest.Interface
}

// newPredictedInterfaces returns a PredictedInterfaces
func newPredictedInterfaces(c *NetworkV1Client) *predictedInterfaces {
	return &predictedInterfaces{
		client: c.RESTClient(),
	}
}

// Get takes name of the predictedInterface, and returns the corresponding predictedInterface object, and an error if there is any.
func (c *predictedInterfaces) Get(name string, options metav1.GetOptions) (result *v1.PredictedInterface, err error) {
	result = &v1.PredictedInterface{}
	err = c.client.Get().
		Resource("predictedinterfaces").
		Name(name).
		VersionedParams(&options, scheme.ParameterCodec).
		Do().
		Into(result)
	return
}

// List takes label and field selectors, and returns the list of PredictedInterfaces that match those selectors.
func (c *predictedInterfaces) List(opts metav1.ListOptions) (result *v1.PredictedInterfaceList, err error) {
	result = &v1.PredictedInterfaceList{}
	err = c.client.Get().
		Resource("predictedinterfaces").
		VersionedParams(&opts, scheme.ParameterCodec).
		Do().
		Into(result)
	return
}

// Watch returns a watch.Interface that watches the requested predictedInterfaces.
func (c *predictedInterfaces) Watch(opts metav1.ListOptions) (watch.Interface, error) {
	opts.Watch = true
	return c.client.Get().
		Resource("predictedinterfaces").
		VersionedParams(&opts, scheme.ParameterCodec).
		Watch()
}

// Create takes the representation of a predictedInterface and creates it.  Returns the server's representation of the predictedInterface, and an error, if there is any.
func (c *predictedInterfaces) Create(predictedInterface *v1.PredictedInterface) (result *v1.PredictedInterface, err error) {
	result = &v1.PredictedInterface{}
	err = c.client.Post().
		Resource("predictedinterfaces").
		Body(predictedInterface).
		Do().
		Into(result)
	return
}

// Update takes the representation of a predictedInterface and updates it. Returns the server's representation of the predictedInterface, and an error, if there is any.
func (c *predictedInterfaces) Update(predictedInterface *v1.PredictedInterface) (result *v1.PredictedInterface, err error) {
	result = &v1.PredictedInterface{}
	err = c.client.Put().
		Resource("predictedinterfaces").
		Name(predictedInterface.Name).
		Body(predictedInterface).
		Do().
		Into(result)
	return
}

// UpdateStatus was generated because the type contains a Status member.
// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().

func (c *predictedInterfaces) UpdateStatus(predictedInterface *v1.PredictedInterface) (result *v1.PredictedInterface, err error) {
	result = &v1.PredictedInterface{}
	err = c.client.Put().
		Resource("predictedinterfaces").
		Name(predictedInterface.Name).
		SubResource("status").
		Body(predictedInterface).
		Do().
		Into(result)
	return
}

// Delete takes name of the predictedInterface and deletes it. Returns an error if one occurs.
func (c *predictedInterfaces) Delete(name string, options *metav1.DeleteOptions) error {
	return c.client.Delete().
		Resource("predictedinterfaces").
		Name(name).
		Body(options).
		Do().
		Error()
}

// DeleteCollection deletes a collection of objects.
func (c *predictedInterfaces) DeleteCollection(options *metav1.DeleteOptions, listOptions metav1.ListOptions) error {
	return c.client.Delete().
		Resource("predictedinterfaces").
		VersionedParams(&listOptions, scheme.ParameterCodec).
		Body(options).
		Do().
		Error()
}

// Patch applies the patch and returns the patched predictedInterface.
func (c *predictedInterfaces) Patch(name string, pt types.PatchType, data []byte, subresources ...string) (result *v1.PredictedInterface, err error) {
	result = &v1.PredictedInterface{}
	err = c.client.Patch(pt).
		Resource("predictedinterfaces").
		SubResource(subresources...).
		Name(name).
		Body(data).
		Do().
		Into(result)
	return
}
