/*
Copyright 2019 The Alipay Authors.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "gitlab.alipay-inc.com/sigma/clientset/pkg/apis/network/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// VSwitchLister helps list VSwitches.
type VSwitchLister interface {
	// List lists all VSwitches in the indexer.
	List(selector labels.Selector) (ret []*v1.VSwitch, err error)
	// Get retrieves the VSwitch from the index for a given name.
	Get(name string) (*v1.VSwitch, error)
	VSwitchListerExpansion
}

// vSwitchLister implements the VSwitchLister interface.
type vSwitchLister struct {
	indexer cache.Indexer
}

// NewVSwitchLister returns a new VSwitchLister.
func NewVSwitchLister(indexer cache.Indexer) VSwitchLister {
	return &vSwitchLister{indexer: indexer}
}

// List lists all VSwitches in the indexer.
func (s *vSwitchLister) List(selector labels.Selector) (ret []*v1.VSwitch, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.VSwitch))
	})
	return ret, err
}

// Get retrieves the VSwitch from the index for a given name.
func (s *vSwitchLister) Get(name string) (*v1.VSwitch, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("vswitch"), name)
	}
	return obj.(*v1.VSwitch), nil
}
