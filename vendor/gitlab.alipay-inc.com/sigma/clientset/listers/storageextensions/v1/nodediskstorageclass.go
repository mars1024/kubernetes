/*
Copyright 2019 The Alipay Authors.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "gitlab.alipay-inc.com/sigma/clientset/pkg/apis/storageextensions/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// NodeDiskStorageClassLister helps list NodeDiskStorageClasses.
type NodeDiskStorageClassLister interface {
	// List lists all NodeDiskStorageClasses in the indexer.
	List(selector labels.Selector) (ret []*v1.NodeDiskStorageClass, err error)
	// Get retrieves the NodeDiskStorageClass from the index for a given name.
	Get(name string) (*v1.NodeDiskStorageClass, error)
	NodeDiskStorageClassListerExpansion
}

// nodeDiskStorageClassLister implements the NodeDiskStorageClassLister interface.
type nodeDiskStorageClassLister struct {
	indexer cache.Indexer
}

// NewNodeDiskStorageClassLister returns a new NodeDiskStorageClassLister.
func NewNodeDiskStorageClassLister(indexer cache.Indexer) NodeDiskStorageClassLister {
	return &nodeDiskStorageClassLister{indexer: indexer}
}

// List lists all NodeDiskStorageClasses in the indexer.
func (s *nodeDiskStorageClassLister) List(selector labels.Selector) (ret []*v1.NodeDiskStorageClass, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.NodeDiskStorageClass))
	})
	return ret, err
}

// Get retrieves the NodeDiskStorageClass from the index for a given name.
func (s *nodeDiskStorageClassLister) Get(name string) (*v1.NodeDiskStorageClass, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("nodediskstorageclass"), name)
	}
	return obj.(*v1.NodeDiskStorageClass), nil
}
